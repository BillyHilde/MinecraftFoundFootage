#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

#include veil:camera

layout (std430, binding = 0) buffer MyBuffer {
    vec3 position[];
} myBuffer;

//layout(std430, binding = 0) buffer Counter {
//    uint count;
//    uint primCount;
//    uint firstIndex;
//    uint baseVertex;
//    uint baseInstance;
//};

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main() {
    uint idx = gl_GlobalInvocationID.x;
    vec3 pos = vec3(float(idx), -60, 1);

//    atomicAdd(primCount, 0);
//    primCount = 1;
    myBuffer.position[idx] = pos;
}